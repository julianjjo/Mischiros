security:
    providers:
        fos_userbundle:
            id: fos_user.user_manager

    acl:
        connection: default

    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
#        # for convenience, I decided to gather Sonata roles here
#        ROLE_SONATA_FOO_READER:
#            - ROLE_SONATA_ADMIN_DEMO_FOO_LIST
#            - ROLE_SONATA_ADMIN_DEMO_FOO_VIEW
#        ROLE_SONATA_FOO_EDITOR:
#            - ROLE_SONATA_ADMIN_DEMO_FOO_CREATE
#            - ROLE_SONATA_ADMIN_DEMO_FOO_EDIT
#        ROLE_SONATA_FOO_ADMIN:
#            - ROLE_SONATA_ADMIN_DEMO_FOO_DELETE
#            - ROLE_SONATA_ADMIN_DEMO_FOO_EXPORT
        # those are the roles I will use (less verbose)
        ROLE_ADMIN:            [ROLE_STAFF, ROLE_SONATA_FOO_EDITOR, ROLE_SONATA_FOO_ADMIN]
        ROLE_SUPER_ADMIN:      [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # set access_strategy to unanimous, else you may have unexpected behaviors
    access_decision_manager:
        strategy: unanimous



    firewalls:
        # -> custom firewall for the admin area of the URL
        admin:
            pattern:     /admin(.*)
            form_login:
                provider:      fos_userbundle
                login_path:    /admin/login
                use_forward:   false
                check_path:    /admin/login_check
                failure_path:  null
            logout:
                path:          /admin/logout
            anonymous:   true
        # -> end custom configuration

        # defaut login area for standard users
        main:
            pattern:     .*
            form_login:
                provider:      fos_userbundle
                login_path:    /login
                use_forward:   false
                check_path:    /login_check
                failure_path:  null
            logout:      true
            anonymous:   true
